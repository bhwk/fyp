[tool.pyright]
include = ["src"]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  "src/experimental",
  "src/typestubs",
]
ignore = ["src/oldstuff"]
defineConstant = { DEBUG = true }

typeCheckingMode = "basic"

reportMissingImports = "error"
reportMissingTypeStubs = false
executionEnvironments = [
  { root = "src/web", pythonVersion = "3.5", pythonPlatform = "Windows", extraPaths = [
    "src/service_libs",
  ], reportMissingImports = "warning" },
  { root = "src/sdk", pythonVersion = "3.0", extraPaths = [
    "src/backend",
  ] },
  { root = "src/tests", extraPaths = [
    "src/tests/e2e",
    "src/sdk",
  ] },
  { root = "src" },
]

[tool.poetry]
name = "fyp"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
tokenizers = "^0.21.0"
llama-index-embeddings-huggingface = "^0.4.0"
llama-index-llms-ollama = "^0.5.0"
llama-index-llms-gemini = "^0.4.2"
llama-index-vector-stores-postgres = "^0.4.1"
pyright = "^1.1.391"
llama-index-readers-file = "^0.4.1"
llama-index = "^0.12.10"
aiofiles = "^24.1.0"

[tool.pyright]
venvPath ="."
venv = ".venv"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
